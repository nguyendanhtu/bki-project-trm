///////////////////////////////////////////////////////////////////////////
// Description: Data Access class for the table 'DM_GIANG_VIEN'
// Generated by LLBLGen v1.21.2003.712 Final on: Wednesday, September 21, 2011, 3:17:39 PM
// Because the Base Class already implements IDispose, this class doesn't.
///////////////////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;

namespace TRMLLBL
{
	/// <summary>
	/// Purpose: Data Access class for the table 'DM_GIANG_VIEN'.
	/// </summary>
	public class DM_GIANG_VIEN : DBInteractionBase
	{
		#region Class Member Declarations
			private SqlDateTime		_nGAY_CAP, _nGAY_SINH;
			private SqlDecimal		_iD, _iD_DON_VI_QUAN_LY, _iD_DON_VI_QUAN_LYOld;
			private SqlString		_iD_TRANG_THAI_GIANG_VIEN, _nOI_CAP, _tRUONG_DAO_TAO, _sO_TAI_KHOAN, _tEN_NGAN_HANG, _sO_CMTND, _gV_THAM_DINH_HL_YN, _gV_DUYET_HL_YN, _dESCRIPTION, _gV_HDKH_YN, _gVHD_YN, _mA_SO_THUE, _gV_VIET_HL_YN, _gVCM_YN, _cHUC_VU_CAO_NHAT, _cHUC_VU_HIEN_TAI, _tEL_OFFICE, _tEL_HOME, _hO_VA_TEN_DEM, _mA_GIANG_VIEN, _gIOI_TINH_YN, _tEN_GIANG_VIEN, _hOC_VI, _aNH_CA_NHAN, _cHUYEN_NGANH_CHINH, _hOC_HAM, _eMAIL, _mOBILE_PHONE, _eMAIL_TOPICA, _tEN_CO_QUAN_CONG_TAC;
		#endregion


		/// <summary>
		/// Purpose: Class constructor.
		/// </summary>
		public DM_GIANG_VIEN()
		{
			// Nothing for now.
		}


		/// <summary>
		/// Purpose: Insert method. This method will insert one new row into the database.
		/// </summary>
		/// <returns>True if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// Properties needed for this method: 
		/// <UL>
		///		 <LI>MA_GIANG_VIEN</LI>
		///		 <LI>HO_VA_TEN_DEM</LI>
		///		 <LI>TEN_GIANG_VIEN</LI>
		///		 <LI>NGAY_SINH. May be SqlDateTime.Null</LI>
		///		 <LI>GIOI_TINH_YN</LI>
		///		 <LI>CHUC_VU_HIEN_TAI. May be SqlString.Null</LI>
		///		 <LI>CHUC_VU_CAO_NHAT. May be SqlString.Null</LI>
		///		 <LI>TEL_HOME. May be SqlString.Null</LI>
		///		 <LI>TEL_OFFICE. May be SqlString.Null</LI>
		///		 <LI>MOBILE_PHONE. May be SqlString.Null</LI>
		///		 <LI>EMAIL. May be SqlString.Null</LI>
		///		 <LI>TEN_CO_QUAN_CONG_TAC. May be SqlString.Null</LI>
		///		 <LI>EMAIL_TOPICA. May be SqlString.Null</LI>
		///		 <LI>ANH_CA_NHAN. May be SqlString.Null</LI>
		///		 <LI>HOC_VI. May be SqlString.Null</LI>
		///		 <LI>HOC_HAM. May be SqlString.Null</LI>
		///		 <LI>CHUYEN_NGANH_CHINH. May be SqlString.Null</LI>
		///		 <LI>TRUONG_DAO_TAO. May be SqlString.Null</LI>
		///		 <LI>ID_TRANG_THAI_GIANG_VIEN. May be SqlString.Null</LI>
		///		 <LI>SO_TAI_KHOAN. May be SqlString.Null</LI>
		///		 <LI>TEN_NGAN_HANG. May be SqlString.Null</LI>
		///		 <LI>SO_CMTND. May be SqlString.Null</LI>
		///		 <LI>NGAY_CAP. May be SqlDateTime.Null</LI>
		///		 <LI>NOI_CAP. May be SqlString.Null</LI>
		///		 <LI>ID_DON_VI_QUAN_LY. May be SqlDecimal.Null</LI>
		///		 <LI>MA_SO_THUE. May be SqlString.Null</LI>
		///		 <LI>GVHD_YN</LI>
		///		 <LI>GVCM_YN</LI>
		///		 <LI>GV_VIET_HL_YN</LI>
		///		 <LI>GV_DUYET_HL_YN</LI>
		///		 <LI>GV_THAM_DINH_HL_YN</LI>
		///		 <LI>GV_HDKH_YN</LI>
		///		 <LI>DESCRIPTION. May be SqlString.Null</LI>
		/// </UL>
		/// Properties set after a succesful call of this method: 
		/// <UL>
		///		 <LI>ID</LI>
		/// </UL>
		/// </remarks>
		public override bool Insert()
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.[pr_DM_GIANG_VIEN_Insert]";
			cmdToExecute.CommandType = CommandType.StoredProcedure;

			// Use base class' connection object
			cmdToExecute.Connection = _mainConnection;

			try
			{
				cmdToExecute.Parameters.Add(new SqlParameter("@sMA_GIANG_VIEN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _mA_GIANG_VIEN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sHO_VA_TEN_DEM", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _hO_VA_TEN_DEM));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEN_GIANG_VIEN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_GIANG_VIEN));
				cmdToExecute.Parameters.Add(new SqlParameter("@daNGAY_SINH", SqlDbType.DateTime, 8, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nGAY_SINH));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGIOI_TINH_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gIOI_TINH_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sCHUC_VU_HIEN_TAI", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _cHUC_VU_HIEN_TAI));
				cmdToExecute.Parameters.Add(new SqlParameter("@sCHUC_VU_CAO_NHAT", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _cHUC_VU_CAO_NHAT));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEL_HOME", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEL_HOME));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEL_OFFICE", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEL_OFFICE));
				cmdToExecute.Parameters.Add(new SqlParameter("@sMOBILE_PHONE", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _mOBILE_PHONE));
				cmdToExecute.Parameters.Add(new SqlParameter("@sEMAIL", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _eMAIL));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEN_CO_QUAN_CONG_TAC", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_CO_QUAN_CONG_TAC));
				cmdToExecute.Parameters.Add(new SqlParameter("@sEMAIL_TOPICA", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _eMAIL_TOPICA));
				cmdToExecute.Parameters.Add(new SqlParameter("@sANH_CA_NHAN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _aNH_CA_NHAN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sHOC_VI", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _hOC_VI));
				cmdToExecute.Parameters.Add(new SqlParameter("@sHOC_HAM", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _hOC_HAM));
				cmdToExecute.Parameters.Add(new SqlParameter("@sCHUYEN_NGANH_CHINH", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _cHUYEN_NGANH_CHINH));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTRUONG_DAO_TAO", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tRUONG_DAO_TAO));
				cmdToExecute.Parameters.Add(new SqlParameter("@sID_TRANG_THAI_GIANG_VIEN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _iD_TRANG_THAI_GIANG_VIEN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sSO_TAI_KHOAN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _sO_TAI_KHOAN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEN_NGAN_HANG", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_NGAN_HANG));
				cmdToExecute.Parameters.Add(new SqlParameter("@sSO_CMTND", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _sO_CMTND));
				cmdToExecute.Parameters.Add(new SqlParameter("@daNGAY_CAP", SqlDbType.DateTime, 8, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nGAY_CAP));
				cmdToExecute.Parameters.Add(new SqlParameter("@sNOI_CAP", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nOI_CAP));
				cmdToExecute.Parameters.Add(new SqlParameter("@dcID_DON_VI_QUAN_LY", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD_DON_VI_QUAN_LY));
				cmdToExecute.Parameters.Add(new SqlParameter("@sMA_SO_THUE", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _mA_SO_THUE));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGVHD_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gVHD_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGVCM_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gVCM_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGV_VIET_HL_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gV_VIET_HL_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGV_DUYET_HL_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gV_DUYET_HL_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGV_THAM_DINH_HL_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gV_THAM_DINH_HL_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGV_HDKH_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gV_HDKH_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sDESCRIPTION", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _dESCRIPTION));
				cmdToExecute.Parameters.Add(new SqlParameter("@dcID", SqlDbType.Decimal, 9, ParameterDirection.Output, false, 18, 1, "", DataRowVersion.Proposed, _iD));

				if(_mainConnectionIsCreatedLocal)
				{
					// Open connection.
					_mainConnection.Open();
				}
				else
				{
					if(_mainConnectionProvider.IsTransactionPending)
					{
						cmdToExecute.Transaction = _mainConnectionProvider.CurrentTransaction;
					}
				}

				// Execute query.
				_rowsAffected = cmdToExecute.ExecuteNonQuery();
				_iD = (Decimal)cmdToExecute.Parameters["@dcID"].Value;
				return true;
			}
			catch(Exception ex)
			{
				// some error occured. Bubble it to caller and encapsulate Exception object
				throw new Exception("DM_GIANG_VIEN::Insert::Error occured.", ex);
			}
			finally
			{
				if(_mainConnectionIsCreatedLocal)
				{
					// Close connection.
					_mainConnection.Close();
				}
				cmdToExecute.Dispose();
			}
		}


		/// <summary>
		/// Purpose: Update method. This method will Update one existing row in the database.
		/// </summary>
		/// <returns>True if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// Properties needed for this method: 
		/// <UL>
		///		 <LI>ID</LI>
		///		 <LI>MA_GIANG_VIEN</LI>
		///		 <LI>HO_VA_TEN_DEM</LI>
		///		 <LI>TEN_GIANG_VIEN</LI>
		///		 <LI>NGAY_SINH. May be SqlDateTime.Null</LI>
		///		 <LI>GIOI_TINH_YN</LI>
		///		 <LI>CHUC_VU_HIEN_TAI. May be SqlString.Null</LI>
		///		 <LI>CHUC_VU_CAO_NHAT. May be SqlString.Null</LI>
		///		 <LI>TEL_HOME. May be SqlString.Null</LI>
		///		 <LI>TEL_OFFICE. May be SqlString.Null</LI>
		///		 <LI>MOBILE_PHONE. May be SqlString.Null</LI>
		///		 <LI>EMAIL. May be SqlString.Null</LI>
		///		 <LI>TEN_CO_QUAN_CONG_TAC. May be SqlString.Null</LI>
		///		 <LI>EMAIL_TOPICA. May be SqlString.Null</LI>
		///		 <LI>ANH_CA_NHAN. May be SqlString.Null</LI>
		///		 <LI>HOC_VI. May be SqlString.Null</LI>
		///		 <LI>HOC_HAM. May be SqlString.Null</LI>
		///		 <LI>CHUYEN_NGANH_CHINH. May be SqlString.Null</LI>
		///		 <LI>TRUONG_DAO_TAO. May be SqlString.Null</LI>
		///		 <LI>ID_TRANG_THAI_GIANG_VIEN. May be SqlString.Null</LI>
		///		 <LI>SO_TAI_KHOAN. May be SqlString.Null</LI>
		///		 <LI>TEN_NGAN_HANG. May be SqlString.Null</LI>
		///		 <LI>SO_CMTND. May be SqlString.Null</LI>
		///		 <LI>NGAY_CAP. May be SqlDateTime.Null</LI>
		///		 <LI>NOI_CAP. May be SqlString.Null</LI>
		///		 <LI>ID_DON_VI_QUAN_LY. May be SqlDecimal.Null</LI>
		///		 <LI>MA_SO_THUE. May be SqlString.Null</LI>
		///		 <LI>GVHD_YN</LI>
		///		 <LI>GVCM_YN</LI>
		///		 <LI>GV_VIET_HL_YN</LI>
		///		 <LI>GV_DUYET_HL_YN</LI>
		///		 <LI>GV_THAM_DINH_HL_YN</LI>
		///		 <LI>GV_HDKH_YN</LI>
		///		 <LI>DESCRIPTION. May be SqlString.Null</LI>
		/// </UL>
		/// </remarks>
		public override bool Update()
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.[pr_DM_GIANG_VIEN_Update]";
			cmdToExecute.CommandType = CommandType.StoredProcedure;

			// Use base class' connection object
			cmdToExecute.Connection = _mainConnection;

			try
			{
				cmdToExecute.Parameters.Add(new SqlParameter("@dcID", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD));
				cmdToExecute.Parameters.Add(new SqlParameter("@sMA_GIANG_VIEN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _mA_GIANG_VIEN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sHO_VA_TEN_DEM", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _hO_VA_TEN_DEM));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEN_GIANG_VIEN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_GIANG_VIEN));
				cmdToExecute.Parameters.Add(new SqlParameter("@daNGAY_SINH", SqlDbType.DateTime, 8, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nGAY_SINH));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGIOI_TINH_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gIOI_TINH_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sCHUC_VU_HIEN_TAI", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _cHUC_VU_HIEN_TAI));
				cmdToExecute.Parameters.Add(new SqlParameter("@sCHUC_VU_CAO_NHAT", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _cHUC_VU_CAO_NHAT));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEL_HOME", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEL_HOME));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEL_OFFICE", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEL_OFFICE));
				cmdToExecute.Parameters.Add(new SqlParameter("@sMOBILE_PHONE", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _mOBILE_PHONE));
				cmdToExecute.Parameters.Add(new SqlParameter("@sEMAIL", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _eMAIL));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEN_CO_QUAN_CONG_TAC", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_CO_QUAN_CONG_TAC));
				cmdToExecute.Parameters.Add(new SqlParameter("@sEMAIL_TOPICA", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _eMAIL_TOPICA));
				cmdToExecute.Parameters.Add(new SqlParameter("@sANH_CA_NHAN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _aNH_CA_NHAN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sHOC_VI", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _hOC_VI));
				cmdToExecute.Parameters.Add(new SqlParameter("@sHOC_HAM", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _hOC_HAM));
				cmdToExecute.Parameters.Add(new SqlParameter("@sCHUYEN_NGANH_CHINH", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _cHUYEN_NGANH_CHINH));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTRUONG_DAO_TAO", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tRUONG_DAO_TAO));
				cmdToExecute.Parameters.Add(new SqlParameter("@sID_TRANG_THAI_GIANG_VIEN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _iD_TRANG_THAI_GIANG_VIEN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sSO_TAI_KHOAN", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _sO_TAI_KHOAN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sTEN_NGAN_HANG", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _tEN_NGAN_HANG));
				cmdToExecute.Parameters.Add(new SqlParameter("@sSO_CMTND", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _sO_CMTND));
				cmdToExecute.Parameters.Add(new SqlParameter("@daNGAY_CAP", SqlDbType.DateTime, 8, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nGAY_CAP));
				cmdToExecute.Parameters.Add(new SqlParameter("@sNOI_CAP", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _nOI_CAP));
				cmdToExecute.Parameters.Add(new SqlParameter("@dcID_DON_VI_QUAN_LY", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD_DON_VI_QUAN_LY));
				cmdToExecute.Parameters.Add(new SqlParameter("@sMA_SO_THUE", SqlDbType.NVarChar, 50, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _mA_SO_THUE));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGVHD_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gVHD_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGVCM_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gVCM_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGV_VIET_HL_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gV_VIET_HL_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGV_DUYET_HL_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gV_DUYET_HL_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGV_THAM_DINH_HL_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gV_THAM_DINH_HL_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sGV_HDKH_YN", SqlDbType.NVarChar, 1, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _gV_HDKH_YN));
				cmdToExecute.Parameters.Add(new SqlParameter("@sDESCRIPTION", SqlDbType.NVarChar, 250, ParameterDirection.Input, false, 0, 0, "", DataRowVersion.Proposed, _dESCRIPTION));

				if(_mainConnectionIsCreatedLocal)
				{
					// Open connection.
					_mainConnection.Open();
				}
				else
				{
					if(_mainConnectionProvider.IsTransactionPending)
					{
						cmdToExecute.Transaction = _mainConnectionProvider.CurrentTransaction;
					}
				}

				// Execute query.
				_rowsAffected = cmdToExecute.ExecuteNonQuery();
				return true;
			}
			catch(Exception ex)
			{
				// some error occured. Bubble it to caller and encapsulate Exception object
				throw new Exception("DM_GIANG_VIEN::Update::Error occured.", ex);
			}
			finally
			{
				if(_mainConnectionIsCreatedLocal)
				{
					// Close connection.
					_mainConnection.Close();
				}
				cmdToExecute.Dispose();
			}
		}


		/// <summary>
		/// Purpose: Update method for updating one or more rows using the Foreign Key 'ID_DON_VI_QUAN_LY.
		/// This method will Update one or more existing rows in the database. It will reset the field 'ID_DON_VI_QUAN_LY' in
		/// all rows which have as value for this field the value as set in property 'ID_DON_VI_QUAN_LYOld' to 
		/// the value as set in property 'ID_DON_VI_QUAN_LY'.
		/// </summary>
		/// <returns>True if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// Properties needed for this method: 
		/// <UL>
		///		 <LI>ID_DON_VI_QUAN_LY. May be SqlDecimal.Null</LI>
		///		 <LI>ID_DON_VI_QUAN_LYOld. May be SqlDecimal.Null</LI>
		/// </UL>
		/// </remarks>
		public bool UpdateAllWID_DON_VI_QUAN_LYLogic()
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.[pr_DM_GIANG_VIEN_UpdateAllWID_DON_VI_QUAN_LYLogic]";
			cmdToExecute.CommandType = CommandType.StoredProcedure;

			// Use base class' connection object
			cmdToExecute.Connection = _mainConnection;

			try
			{
				cmdToExecute.Parameters.Add(new SqlParameter("@dcID_DON_VI_QUAN_LY", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD_DON_VI_QUAN_LY));
				cmdToExecute.Parameters.Add(new SqlParameter("@dcID_DON_VI_QUAN_LYOld", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD_DON_VI_QUAN_LYOld));

				if(_mainConnectionIsCreatedLocal)
				{
					// Open connection.
					_mainConnection.Open();
				}
				else
				{
					if(_mainConnectionProvider.IsTransactionPending)
					{
						cmdToExecute.Transaction = _mainConnectionProvider.CurrentTransaction;
					}
				}

				// Execute query.
				_rowsAffected = cmdToExecute.ExecuteNonQuery();
				return true;
			}
			catch(Exception ex)
			{
				// some error occured. Bubble it to caller and encapsulate Exception object
				throw new Exception("DM_GIANG_VIEN::UpdateAllWID_DON_VI_QUAN_LYLogic::Error occured.", ex);
			}
			finally
			{
				if(_mainConnectionIsCreatedLocal)
				{
					// Close connection.
					_mainConnection.Close();
				}
				cmdToExecute.Dispose();
			}
		}


		/// <summary>
		/// Purpose: Delete method. This method will Delete one existing row in the database, based on the Primary Key.
		/// </summary>
		/// <returns>True if succeeded, otherwise an Exception is thrown. </returns>
		/// <remarks>
		/// Properties needed for this method: 
		/// <UL>
		///		 <LI>ID</LI>
		/// </UL>
		/// </remarks>
		public override bool Delete()
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.[pr_DM_GIANG_VIEN_Delete]";
			cmdToExecute.CommandType = CommandType.StoredProcedure;

			// Use base class' connection object
			cmdToExecute.Connection = _mainConnection;

			try
			{
				cmdToExecute.Parameters.Add(new SqlParameter("@dcID", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD));

				if(_mainConnectionIsCreatedLocal)
				{
					// Open connection.
					_mainConnection.Open();
				}
				else
				{
					if(_mainConnectionProvider.IsTransactionPending)
					{
						cmdToExecute.Transaction = _mainConnectionProvider.CurrentTransaction;
					}
				}

				// Execute query.
				_rowsAffected = cmdToExecute.ExecuteNonQuery();
				return true;
			}
			catch(Exception ex)
			{
				// some error occured. Bubble it to caller and encapsulate Exception object
				throw new Exception("DM_GIANG_VIEN::Delete::Error occured.", ex);
			}
			finally
			{
				if(_mainConnectionIsCreatedLocal)
				{
					// Close connection.
					_mainConnection.Close();
				}
				cmdToExecute.Dispose();
			}
		}


		/// <summary>
		/// Purpose: Delete method for a foreign key. This method will Delete one or more rows from the database, based on the Foreign Key 'ID_DON_VI_QUAN_LY'
		/// </summary>
		/// <returns>True if succeeded, false otherwise. </returns>
		/// <remarks>
		/// Properties needed for this method: 
		/// <UL>
		///		 <LI>ID_DON_VI_QUAN_LY. May be SqlDecimal.Null</LI>
		/// </UL>
		/// </remarks>
		public bool DeleteAllWID_DON_VI_QUAN_LYLogic()
		{
			SqlCommand	cmdToExecute = new SqlCommand();
			cmdToExecute.CommandText = "dbo.[pr_DM_GIANG_VIEN_DeleteAllWID_DON_VI_QUAN_LYLogic]";
			cmdToExecute.CommandType = CommandType.StoredProcedure;

			// Use base class' connection object
			cmdToExecute.Connection = _mainConnection;

			try
			{
				cmdToExecute.Parameters.Add(new SqlParameter("@dcID_DON_VI_QUAN_LY", SqlDbType.Decimal, 9, ParameterDirection.Input, false, 18, 1, "", DataRowVersion.Proposed, _iD_DON_VI_QUAN_LY));

				if(_mainConnectionIsCreatedLocal)
				{
					// Open connection.
					_mainConnection.Open();
				}
				else
				{
					if(_mainConnectionProvider.IsTransactionPending)
					{
						cmdToExecute.Transaction = _mainConnectionProvider.CurrentTransaction;
					}
				}

				// Execute query.
				_rowsAffected = cmdToExecute.ExecuteNonQuery();
				return true;
			}
			catch(Exception ex)
			{
				// some error occured. Bubble it to caller and encapsulate Exception object
				throw new Exception("DM_GIANG_VIEN::DeleteAllWID_DON_VI_QUAN_LYLogic::Error occured.", ex);
			}
			finally
			{
				if(_mainConnectionIsCreatedLocal)
				{
					// Close connection.
					_mainConnection.Close();
				}
				cmdToExecute.Dispose();
			}
		}


		#region Class Property Declarations
		public SqlDecimal ID
		{
			get
			{
				return _iD;
			}
			set
			{
				SqlDecimal iDTmp = (SqlDecimal)value;
				if(iDTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID", "ID can't be NULL");
				}
				_iD = value;
			}
		}


		public SqlString MA_GIANG_VIEN
		{
			get
			{
				return _mA_GIANG_VIEN;
			}
			set
			{
				SqlString mA_GIANG_VIENTmp = (SqlString)value;
				if(mA_GIANG_VIENTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("MA_GIANG_VIEN", "MA_GIANG_VIEN can't be NULL");
				}
				_mA_GIANG_VIEN = value;
			}
		}


		public SqlString HO_VA_TEN_DEM
		{
			get
			{
				return _hO_VA_TEN_DEM;
			}
			set
			{
				SqlString hO_VA_TEN_DEMTmp = (SqlString)value;
				if(hO_VA_TEN_DEMTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("HO_VA_TEN_DEM", "HO_VA_TEN_DEM can't be NULL");
				}
				_hO_VA_TEN_DEM = value;
			}
		}


		public SqlString TEN_GIANG_VIEN
		{
			get
			{
				return _tEN_GIANG_VIEN;
			}
			set
			{
				SqlString tEN_GIANG_VIENTmp = (SqlString)value;
				if(tEN_GIANG_VIENTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEN_GIANG_VIEN", "TEN_GIANG_VIEN can't be NULL");
				}
				_tEN_GIANG_VIEN = value;
			}
		}


		public SqlDateTime NGAY_SINH
		{
			get
			{
				return _nGAY_SINH;
			}
			set
			{
				SqlDateTime nGAY_SINHTmp = (SqlDateTime)value;
				if(nGAY_SINHTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NGAY_SINH", "NGAY_SINH can't be NULL");
				}
				_nGAY_SINH = value;
			}
		}


		public SqlString GIOI_TINH_YN
		{
			get
			{
				return _gIOI_TINH_YN;
			}
			set
			{
				SqlString gIOI_TINH_YNTmp = (SqlString)value;
				if(gIOI_TINH_YNTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("GIOI_TINH_YN", "GIOI_TINH_YN can't be NULL");
				}
				_gIOI_TINH_YN = value;
			}
		}


		public SqlString CHUC_VU_HIEN_TAI
		{
			get
			{
				return _cHUC_VU_HIEN_TAI;
			}
			set
			{
				SqlString cHUC_VU_HIEN_TAITmp = (SqlString)value;
				if(cHUC_VU_HIEN_TAITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("CHUC_VU_HIEN_TAI", "CHUC_VU_HIEN_TAI can't be NULL");
				}
				_cHUC_VU_HIEN_TAI = value;
			}
		}


		public SqlString CHUC_VU_CAO_NHAT
		{
			get
			{
				return _cHUC_VU_CAO_NHAT;
			}
			set
			{
				SqlString cHUC_VU_CAO_NHATTmp = (SqlString)value;
				if(cHUC_VU_CAO_NHATTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("CHUC_VU_CAO_NHAT", "CHUC_VU_CAO_NHAT can't be NULL");
				}
				_cHUC_VU_CAO_NHAT = value;
			}
		}


		public SqlString TEL_HOME
		{
			get
			{
				return _tEL_HOME;
			}
			set
			{
				SqlString tEL_HOMETmp = (SqlString)value;
				if(tEL_HOMETmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEL_HOME", "TEL_HOME can't be NULL");
				}
				_tEL_HOME = value;
			}
		}


		public SqlString TEL_OFFICE
		{
			get
			{
				return _tEL_OFFICE;
			}
			set
			{
				SqlString tEL_OFFICETmp = (SqlString)value;
				if(tEL_OFFICETmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEL_OFFICE", "TEL_OFFICE can't be NULL");
				}
				_tEL_OFFICE = value;
			}
		}


		public SqlString MOBILE_PHONE
		{
			get
			{
				return _mOBILE_PHONE;
			}
			set
			{
				SqlString mOBILE_PHONETmp = (SqlString)value;
				if(mOBILE_PHONETmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("MOBILE_PHONE", "MOBILE_PHONE can't be NULL");
				}
				_mOBILE_PHONE = value;
			}
		}


		public SqlString EMAIL
		{
			get
			{
				return _eMAIL;
			}
			set
			{
				SqlString eMAILTmp = (SqlString)value;
				if(eMAILTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("EMAIL", "EMAIL can't be NULL");
				}
				_eMAIL = value;
			}
		}


		public SqlString TEN_CO_QUAN_CONG_TAC
		{
			get
			{
				return _tEN_CO_QUAN_CONG_TAC;
			}
			set
			{
				SqlString tEN_CO_QUAN_CONG_TACTmp = (SqlString)value;
				if(tEN_CO_QUAN_CONG_TACTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEN_CO_QUAN_CONG_TAC", "TEN_CO_QUAN_CONG_TAC can't be NULL");
				}
				_tEN_CO_QUAN_CONG_TAC = value;
			}
		}


		public SqlString EMAIL_TOPICA
		{
			get
			{
				return _eMAIL_TOPICA;
			}
			set
			{
				SqlString eMAIL_TOPICATmp = (SqlString)value;
				if(eMAIL_TOPICATmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("EMAIL_TOPICA", "EMAIL_TOPICA can't be NULL");
				}
				_eMAIL_TOPICA = value;
			}
		}


		public SqlString ANH_CA_NHAN
		{
			get
			{
				return _aNH_CA_NHAN;
			}
			set
			{
				SqlString aNH_CA_NHANTmp = (SqlString)value;
				if(aNH_CA_NHANTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ANH_CA_NHAN", "ANH_CA_NHAN can't be NULL");
				}
				_aNH_CA_NHAN = value;
			}
		}


		public SqlString HOC_VI
		{
			get
			{
				return _hOC_VI;
			}
			set
			{
				SqlString hOC_VITmp = (SqlString)value;
				if(hOC_VITmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("HOC_VI", "HOC_VI can't be NULL");
				}
				_hOC_VI = value;
			}
		}


		public SqlString HOC_HAM
		{
			get
			{
				return _hOC_HAM;
			}
			set
			{
				SqlString hOC_HAMTmp = (SqlString)value;
				if(hOC_HAMTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("HOC_HAM", "HOC_HAM can't be NULL");
				}
				_hOC_HAM = value;
			}
		}


		public SqlString CHUYEN_NGANH_CHINH
		{
			get
			{
				return _cHUYEN_NGANH_CHINH;
			}
			set
			{
				SqlString cHUYEN_NGANH_CHINHTmp = (SqlString)value;
				if(cHUYEN_NGANH_CHINHTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("CHUYEN_NGANH_CHINH", "CHUYEN_NGANH_CHINH can't be NULL");
				}
				_cHUYEN_NGANH_CHINH = value;
			}
		}


		public SqlString TRUONG_DAO_TAO
		{
			get
			{
				return _tRUONG_DAO_TAO;
			}
			set
			{
				SqlString tRUONG_DAO_TAOTmp = (SqlString)value;
				if(tRUONG_DAO_TAOTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TRUONG_DAO_TAO", "TRUONG_DAO_TAO can't be NULL");
				}
				_tRUONG_DAO_TAO = value;
			}
		}


		public SqlString ID_TRANG_THAI_GIANG_VIEN
		{
			get
			{
				return _iD_TRANG_THAI_GIANG_VIEN;
			}
			set
			{
				SqlString iD_TRANG_THAI_GIANG_VIENTmp = (SqlString)value;
				if(iD_TRANG_THAI_GIANG_VIENTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID_TRANG_THAI_GIANG_VIEN", "ID_TRANG_THAI_GIANG_VIEN can't be NULL");
				}
				_iD_TRANG_THAI_GIANG_VIEN = value;
			}
		}


		public SqlString SO_TAI_KHOAN
		{
			get
			{
				return _sO_TAI_KHOAN;
			}
			set
			{
				SqlString sO_TAI_KHOANTmp = (SqlString)value;
				if(sO_TAI_KHOANTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("SO_TAI_KHOAN", "SO_TAI_KHOAN can't be NULL");
				}
				_sO_TAI_KHOAN = value;
			}
		}


		public SqlString TEN_NGAN_HANG
		{
			get
			{
				return _tEN_NGAN_HANG;
			}
			set
			{
				SqlString tEN_NGAN_HANGTmp = (SqlString)value;
				if(tEN_NGAN_HANGTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("TEN_NGAN_HANG", "TEN_NGAN_HANG can't be NULL");
				}
				_tEN_NGAN_HANG = value;
			}
		}


		public SqlString SO_CMTND
		{
			get
			{
				return _sO_CMTND;
			}
			set
			{
				SqlString sO_CMTNDTmp = (SqlString)value;
				if(sO_CMTNDTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("SO_CMTND", "SO_CMTND can't be NULL");
				}
				_sO_CMTND = value;
			}
		}


		public SqlDateTime NGAY_CAP
		{
			get
			{
				return _nGAY_CAP;
			}
			set
			{
				SqlDateTime nGAY_CAPTmp = (SqlDateTime)value;
				if(nGAY_CAPTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NGAY_CAP", "NGAY_CAP can't be NULL");
				}
				_nGAY_CAP = value;
			}
		}


		public SqlString NOI_CAP
		{
			get
			{
				return _nOI_CAP;
			}
			set
			{
				SqlString nOI_CAPTmp = (SqlString)value;
				if(nOI_CAPTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("NOI_CAP", "NOI_CAP can't be NULL");
				}
				_nOI_CAP = value;
			}
		}


		public SqlDecimal ID_DON_VI_QUAN_LY
		{
			get
			{
				return _iD_DON_VI_QUAN_LY;
			}
			set
			{
				SqlDecimal iD_DON_VI_QUAN_LYTmp = (SqlDecimal)value;
				if(iD_DON_VI_QUAN_LYTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID_DON_VI_QUAN_LY", "ID_DON_VI_QUAN_LY can't be NULL");
				}
				_iD_DON_VI_QUAN_LY = value;
			}
		}
		public SqlDecimal ID_DON_VI_QUAN_LYOld
		{
			get
			{
				return _iD_DON_VI_QUAN_LYOld;
			}
			set
			{
				SqlDecimal iD_DON_VI_QUAN_LYOldTmp = (SqlDecimal)value;
				if(iD_DON_VI_QUAN_LYOldTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("ID_DON_VI_QUAN_LYOld", "ID_DON_VI_QUAN_LYOld can't be NULL");
				}
				_iD_DON_VI_QUAN_LYOld = value;
			}
		}


		public SqlString MA_SO_THUE
		{
			get
			{
				return _mA_SO_THUE;
			}
			set
			{
				SqlString mA_SO_THUETmp = (SqlString)value;
				if(mA_SO_THUETmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("MA_SO_THUE", "MA_SO_THUE can't be NULL");
				}
				_mA_SO_THUE = value;
			}
		}


		public SqlString GVHD_YN
		{
			get
			{
				return _gVHD_YN;
			}
			set
			{
				SqlString gVHD_YNTmp = (SqlString)value;
				if(gVHD_YNTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("GVHD_YN", "GVHD_YN can't be NULL");
				}
				_gVHD_YN = value;
			}
		}


		public SqlString GVCM_YN
		{
			get
			{
				return _gVCM_YN;
			}
			set
			{
				SqlString gVCM_YNTmp = (SqlString)value;
				if(gVCM_YNTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("GVCM_YN", "GVCM_YN can't be NULL");
				}
				_gVCM_YN = value;
			}
		}


		public SqlString GV_VIET_HL_YN
		{
			get
			{
				return _gV_VIET_HL_YN;
			}
			set
			{
				SqlString gV_VIET_HL_YNTmp = (SqlString)value;
				if(gV_VIET_HL_YNTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("GV_VIET_HL_YN", "GV_VIET_HL_YN can't be NULL");
				}
				_gV_VIET_HL_YN = value;
			}
		}


		public SqlString GV_DUYET_HL_YN
		{
			get
			{
				return _gV_DUYET_HL_YN;
			}
			set
			{
				SqlString gV_DUYET_HL_YNTmp = (SqlString)value;
				if(gV_DUYET_HL_YNTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("GV_DUYET_HL_YN", "GV_DUYET_HL_YN can't be NULL");
				}
				_gV_DUYET_HL_YN = value;
			}
		}


		public SqlString GV_THAM_DINH_HL_YN
		{
			get
			{
				return _gV_THAM_DINH_HL_YN;
			}
			set
			{
				SqlString gV_THAM_DINH_HL_YNTmp = (SqlString)value;
				if(gV_THAM_DINH_HL_YNTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("GV_THAM_DINH_HL_YN", "GV_THAM_DINH_HL_YN can't be NULL");
				}
				_gV_THAM_DINH_HL_YN = value;
			}
		}


		public SqlString GV_HDKH_YN
		{
			get
			{
				return _gV_HDKH_YN;
			}
			set
			{
				SqlString gV_HDKH_YNTmp = (SqlString)value;
				if(gV_HDKH_YNTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("GV_HDKH_YN", "GV_HDKH_YN can't be NULL");
				}
				_gV_HDKH_YN = value;
			}
		}


		public SqlString DESCRIPTION
		{
			get
			{
				return _dESCRIPTION;
			}
			set
			{
				SqlString dESCRIPTIONTmp = (SqlString)value;
				if(dESCRIPTIONTmp.IsNull)
				{
					throw new ArgumentOutOfRangeException("DESCRIPTION", "DESCRIPTION can't be NULL");
				}
				_dESCRIPTION = value;
			}
		}
		#endregion
	}
}
